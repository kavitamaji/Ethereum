{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport Web3 from 'web3'; //const web3 = new Web3(window.web3.currentProvider); //because it isnt accessible to next js// verify by checking on browser then on cmd\n\nwindow.addEventListener('load', function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!window.ethereum) {\n            _context.next = 12;\n            break;\n          }\n\n          window.web3 = new Web3(ethereum);\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(ethereum.enable());\n\n        case 5:\n          // Acccounts now exposed\n          web3.eth.sendTransaction({\n            /* ... */\n          });\n          _context.next = 10;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](2);\n\n        case 10:\n          _context.next = 13;\n          break;\n\n        case 12:\n          // Legacy dapp browsers...\n          if (window.web3) {\n            window.web3 = new Web3(web3.currentProvider); // Acccounts always exposed\n\n            web3.eth.sendTransaction({\n              /* ... */\n            });\n          } // Non-dapp browsers...\n          else {\n              console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 8]]);\n});\nvar web3;\n\nif (true && typeof window.web3 !== 'undefined') {\n  //we are in the browser and metamask is running\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  //we are on server OR the user is not running metamask\n  var provider = new Web3.providers.HttpProvider('ripple dragon mobile bulb follow pill guilt wine memory grace spirit puppy', 'https://rinkeby.infura.io/v3/fed7fb9fca9b481aaf7c352a63cff737');\n  web3 = new Web3(provider);\n}\n\nexport default web3;","map":{"version":3,"sources":["D:/EthereumWorkspace/Trustfund/ethereum/web3.js"],"names":["Web3","window","addEventListener","ethereum","web3","enable","eth","sendTransaction","currentProvider","console","log","provider","providers","HttpProvider"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB,C,CACA;;AACAC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC;AAAA;AAAA;AAAA;AAAA;AAAA,eAExBD,MAAM,CAACE,QAFiB;AAAA;AAAA;AAAA;;AAGxBF,UAAAA,MAAM,CAACG,IAAP,GAAc,IAAIJ,IAAJ,CAASG,QAAT,CAAd;AAHwB;AAAA;AAAA,2CAMdA,QAAQ,CAACE,MAAT,EANc;;AAAA;AAOpB;AACAD,UAAAA,IAAI,CAACE,GAAL,CAASC,eAAT,CAAyB;AAAC;AAAD,WAAzB;AARoB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAa5B;AACK,cAAIN,MAAM,CAACG,IAAX,EAAiB;AAClBH,YAAAA,MAAM,CAACG,IAAP,GAAc,IAAIJ,IAAJ,CAASI,IAAI,CAACI,eAAd,CAAd,CADkB,CAElB;;AACAJ,YAAAA,IAAI,CAACE,GAAL,CAASC,eAAT,CAAyB;AAAC;AAAD,aAAzB;AACH,WAJI,CAKL;AALK,eAMA;AACDE,cAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;;AAtB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;AAwBA,IAAIN,IAAJ;;AACA,IAAI,QAAiC,OAAOH,MAAM,CAACG,IAAd,KAAuB,WAA5D,EAAwE;AACxE;AACEA,EAAAA,IAAI,GAAG,IAAIJ,IAAJ,CAASC,MAAM,CAACG,IAAP,CAAYI,eAArB,CAAP;AACD,CAHD,MAII;AACF;AACA,MAAMG,QAAQ,GAAG,IAAIX,IAAI,CAACY,SAAL,CAAeC,YAAnB,CAAgC,4EAAhC,EACjB,+DADiB,CAAjB;AAEAT,EAAAA,IAAI,GAAG,IAAIJ,IAAJ,CAASW,QAAT,CAAP;AACD;;AACD,eAAeP,IAAf","sourcesContent":["import Web3 from 'web3';\r\n//const web3 = new Web3(window.web3.currentProvider); //because it isnt accessible to next js// verify by checking on browser then on cmd\r\nwindow.addEventListener('load', async () => {\r\n    // Modern dapp browsers...\r\n    if (window.ethereum) {\r\n        window.web3 = new Web3(ethereum);\r\n        try {\r\n            // Request account access if needed\r\n            await ethereum.enable();\r\n            // Acccounts now exposed\r\n            web3.eth.sendTransaction({/* ... */});\r\n        } catch (error) {\r\n            // User denied account access...\r\n        }\r\n    }\r\n    // Legacy dapp browsers...\r\n    else if (window.web3) {\r\n        window.web3 = new Web3(web3.currentProvider);\r\n        // Acccounts always exposed\r\n        web3.eth.sendTransaction({/* ... */});\r\n    }\r\n    // Non-dapp browsers...\r\n    else {\r\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n    }\r\n});\r\nlet web3;\r\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined'){\r\n//we are in the browser and metamask is running\r\n  web3 = new Web3(window.web3.currentProvider);\r\n}\r\nelse{\r\n  //we are on server OR the user is not running metamask\r\n  const provider = new Web3.providers.HttpProvider('ripple dragon mobile bulb follow pill guilt wine memory grace spirit puppy',\r\n  'https://rinkeby.infura.io/v3/fed7fb9fca9b481aaf7c352a63cff737');\r\n  web3 = new Web3(provider);\r\n}\r\nexport default web3;\r\n"]},"metadata":{},"sourceType":"module"}