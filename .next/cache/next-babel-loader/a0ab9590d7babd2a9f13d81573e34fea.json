{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport { Link } from '../../../routes';\nimport Layout from '../../../components/Layout';\nimport Trustfund from '../../../ethereum/trustfund';\nimport RequestRow from '../../../components/RequestRow';\n\nclass RequestIndex extends Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const trustfund = Trustfund(address);\n    const requestCount = await trustfund.methods.getRequestsCount().call();\n    const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n      return trustfund.methods.requests(index).call();\n    })); //   console.log(requests);\n\n    return {\n      address,\n      requests,\n      requestCount\n    };\n  }\n\n  renderRow() {\n    return this.props.request.map((request, index) => {\n      return __jsx(RequestRow, {\n        key: index\n      });\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Request List\"), __jsx(Link, {\n      route: `/trustfunds/${this.props.address}/requests/new`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true\n    }, \"Add Request\"))), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"ID\"), __jsx(HeaderCell, null, \"Description\"), __jsx(HeaderCell, null, \"Amount\"), __jsx(HeaderCell, null, \"Recipient\"), __jsx(HeaderCell, null, \"Approval count\"), __jsx(HeaderCell, null, \"Approve\"), __jsx(HeaderCell, null, \"Finalize\")))));\n  }\n\n}\n\nexport default RequestIndex;","map":{"version":3,"sources":["D:/EthereumWorkspace/Trustfund/pages/trustfunds/requests/index.js"],"names":["React","Component","Button","Table","Link","Layout","Trustfund","RequestRow","RequestIndex","getInitialProps","props","address","query","trustfund","requestCount","methods","getRequestsCount","call","requests","Promise","all","Array","parseInt","fill","map","element","index","renderRow","request","render","Header","Row","HeaderCell","Body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,mBAA5B;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AAEA,MAAMC,YAAN,SAA2BP,SAA3B,CAAoC;AAClC,eAAaQ,eAAb,CAA6BC,KAA7B,EAAmC;AAC9B,UAAM;AAACC,MAAAA;AAAD,QAAYD,KAAK,CAACE,KAAxB;AACA,UAAMC,SAAS,GAAGP,SAAS,CAACK,OAAD,CAA3B;AACA,UAAMG,YAAY,GAAG,MAAMD,SAAS,CAACE,OAAV,CAAkBC,gBAAlB,GAAqCC,IAArC,EAA3B;AAEA,UAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACtBC,KAAK,CAACC,QAAQ,CAACR,YAAD,CAAT,CAAL,CACES,IADF,GAEEC,GAFF,CAEM,CAACC,OAAD,EAASC,KAAT,KAAmB;AAAC,aAAOb,SAAS,CAACE,OAAV,CAAkBG,QAAlB,CAA2BQ,KAA3B,EAAkCT,IAAlC,EAAP;AACxB,KAHF,CADsB,CAAvB,CAL8B,CAYjC;;AACE,WAAO;AAACN,MAAAA,OAAD;AAAWO,MAAAA,QAAX;AAAsBJ,MAAAA;AAAtB,KAAP;AACH;;AACDa,EAAAA,SAAS,GAAE;AACT,WAAO,KAAKjB,KAAL,CAAWkB,OAAX,CAAmBJ,GAAnB,CAAuB,CAACI,OAAD,EAASF,KAAT,KAAmB;AAC/C,aAAO,MAAC,UAAD;AACL,QAAA,GAAG,EAAEA;AADA,QAAP;AAGD,KAJM,CAAP;AAKD;;AAEDG,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA,MAAD;AAASC,MAAAA,GAAT;AAAcC,MAAAA,UAAd;AAA0BC,MAAAA;AAA1B,QAAkC9B,KAAxC;AACA,WACE,MAAC,MAAD,QACA,iCADA,EAEA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAG,eAAc,KAAKO,KAAL,CAAWC,OAAQ;AAA/C,OACE,iBACE,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,qBADF,CADF,CAFA,EAOA,MAAC,KAAD,QACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,UAAD,aADF,EAEE,MAAC,UAAD,sBAFF,EAGE,MAAC,UAAD,iBAHF,EAIE,MAAC,UAAD,oBAJF,EAKE,MAAC,UAAD,yBALF,EAME,MAAC,UAAD,kBANF,EAOE,MAAC,UAAD,mBAPF,CADF,CADF,CAPA,CADF;AAwBD;;AAlDiC;;AAoDpC,eAAeH,YAAf","sourcesContent":["import React , {Component} from 'react';\r\nimport {Button, Table} from 'semantic-ui-react';\r\nimport {Link} from '../../../routes';\r\nimport Layout from '../../../components/Layout'\r\nimport Trustfund from '../../../ethereum/trustfund';\r\nimport RequestRow from '../../../components/RequestRow';\r\n\r\nclass RequestIndex extends Component{\r\n  static async getInitialProps(props){\r\n       const {address} = props.query;\r\n       const trustfund = Trustfund(address);\r\n       const requestCount = await trustfund.methods.getRequestsCount().call();\r\n\r\n       const requests = await Promise.all(\r\n        Array(parseInt(requestCount))\r\n         .fill()\r\n         .map((element,index) => {return trustfund.methods.requests(index).call();\r\n         })\r\n       );\r\n\r\n    //   console.log(requests);\r\n      return {address , requests , requestCount};\r\n  }\r\n  renderRow(){\r\n    return this.props.request.map((request,index) => {\r\n      return <RequestRow\r\n        key={index}\r\n       />;\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {Header, Row, HeaderCell, Body} = Table;\r\n    return(\r\n      <Layout>\r\n      <h3>Request List</h3>\r\n      <Link route={`/trustfunds/${this.props.address}/requests/new`}>\r\n        <a>\r\n          <Button primary>Add Request</Button>\r\n        </a>\r\n      </Link>\r\n      <Table>\r\n        <Header>\r\n          <Row>\r\n            <HeaderCell>ID</HeaderCell>\r\n            <HeaderCell>Description</HeaderCell>\r\n            <HeaderCell>Amount</HeaderCell>\r\n            <HeaderCell>Recipient</HeaderCell>\r\n            <HeaderCell>Approval count</HeaderCell>\r\n            <HeaderCell>Approve</HeaderCell>\r\n            <HeaderCell>Finalize</HeaderCell>\r\n          </Row>\r\n        </Header>\r\n      </Table>\r\n      </Layout>\r\n    );\r\n\r\n  }\r\n}\r\nexport default RequestIndex;\r\n"]},"metadata":{},"sourceType":"module"}