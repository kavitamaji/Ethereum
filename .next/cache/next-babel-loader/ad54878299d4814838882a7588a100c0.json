{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Trustfund from '../ethereum/trustfund';\n\nclass RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onApprove\", async () => {\n      const accounts = await web3.eth.getAccounts();\n      const trustfund = Trustfund(this.props.address);\n      await trustfund.methods.approveRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async () => {\n      const accounts = await web3.eth.getAccounts();\n      const trustfund = Trustfund(this.props.address);\n      await trustfund.methods.finalizeRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    return __jsx(Row, {\n      disabled: request.complete\n    }, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, 'ether')), __jsx(Cell, null, request.recipient), __jsx(Cell, null, request.approvalCount, \"/\", approversCount), __jsx(Cell, null, request.complete ? null : __jsx(Button, {\n      color: \"green\",\n      basic: true,\n      onClick: this.onApprove\n    }, \"Approve\")), __jsx(Cell, null, request.complete ? null : __jsx(Button, {\n      color: \"teal\",\n      basic: true,\n      onClick: this.onFinalize\n    }, \"Finalize\")));\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["D:/EthereumWorkspace/Trustfund/components/RequestRow.js"],"names":["React","Component","Table","Button","web3","Trustfund","RequestRow","accounts","eth","getAccounts","trustfund","props","address","methods","approveRequest","id","send","from","finalizeRequest","render","Row","Cell","request","approversCount","complete","description","utils","fromWei","value","recipient","approvalCount","onApprove","onFinalize"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,KAAR,EAAgBC,MAAhB,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAkC;AAAA;AAAA;;AAAA,uCACpB,YAAY;AACtB,YAAMM,QAAQ,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMC,SAAS,GAAGL,SAAS,CAAC,KAAKM,KAAL,CAAWC,OAAZ,CAA3B;AACA,YAAMF,SAAS,CAACG,OAAV,CAAkBC,cAAlB,CAAiC,KAAKH,KAAL,CAAWI,EAA5C,EAAgDC,IAAhD,CAAqD;AACzDC,QAAAA,IAAI,EAAEV,QAAQ,CAAC,CAAD;AAD2C,OAArD,CAAN;AAGD,KAP+B;;AAAA,wCASnB,YAAW;AACtB,YAAMA,QAAQ,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMC,SAAS,GAAGL,SAAS,CAAC,KAAKM,KAAL,CAAWC,OAAZ,CAA3B;AACA,YAAMF,SAAS,CAACG,OAAV,CAAkBK,eAAlB,CAAkC,KAAKP,KAAL,CAAWI,EAA7C,EAAiDC,IAAjD,CAAsD;AAC1DC,QAAAA,IAAI,EAAEV,QAAQ,CAAC,CAAD;AAD4C,OAAtD,CAAN;AAGD,KAf+B;AAAA;;AAgBhCY,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA,GAAD;AAAMC,MAAAA;AAAN,QAAcnB,KAApB;AACA,UAAM;AAACa,MAAAA,EAAD;AAAKO,MAAAA,OAAL;AAAcC,MAAAA;AAAd,QAAgC,KAAKZ,KAA3C;AACA,WACG,MAAC,GAAD;AAAK,MAAA,QAAQ,EAAEW,OAAO,CAACE;AAAvB,OACC,MAAC,IAAD,QAAOT,EAAP,CADD,EAEC,MAAC,IAAD,QAAOO,OAAO,CAACG,WAAf,CAFD,EAGC,MAAC,IAAD,QAAOrB,IAAI,CAACsB,KAAL,CAAWC,OAAX,CAAmBL,OAAO,CAACM,KAA3B,EAAkC,OAAlC,CAAP,CAHD,EAIC,MAAC,IAAD,QAAON,OAAO,CAACO,SAAf,CAJD,EAKC,MAAC,IAAD,QAAOP,OAAO,CAACQ,aAAf,OAA+BP,cAA/B,CALD,EAMC,MAAC,IAAD,QACCD,OAAO,CAACE,QAAR,GAAmB,IAAnB,GACC,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,MAA3B;AAA4B,MAAA,OAAO,EAAE,KAAKO;AAA1C,iBAFF,CAND,EAWC,MAAC,IAAD,QACCT,OAAO,CAACE,QAAR,GAAmB,IAAnB,GACC,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,OAAO,EAAE,KAAKQ;AAAzC,kBAFF,CAXD,CADH;AAmBD;;AAtC+B;;AAwClC,eAAe1B,UAAf","sourcesContent":["import React , {Component} from 'react';\r\nimport {Table , Button} from 'semantic-ui-react';\r\nimport web3 from '../ethereum/web3';\r\nimport Trustfund from '../ethereum/trustfund';\r\n\r\nclass RequestRow extends Component{\r\n  onApprove = async () => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const trustfund = Trustfund(this.props.address);\r\n    await trustfund.methods.approveRequest(this.props.id).send({\r\n      from: accounts[0]\r\n    });\r\n  };\r\n\r\n  onFinalize = async() => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const trustfund = Trustfund(this.props.address);\r\n    await trustfund.methods.finalizeRequest(this.props.id).send({\r\n      from: accounts[0]\r\n    });\r\n  };\r\n  render(){\r\n    const {Row, Cell} = Table;\r\n    const {id, request, approversCount} = this.props;\r\n    return(\r\n       <Row disabled={request.complete}>\r\n        <Cell>{id}</Cell>\r\n        <Cell>{request.description}</Cell>\r\n        <Cell>{web3.utils.fromWei(request.value, 'ether')}</Cell>\r\n        <Cell>{request.recipient}</Cell>\r\n        <Cell>{request.approvalCount}/{approversCount}</Cell>\r\n        <Cell>\r\n        {request.complete ? null : (\r\n          <Button color=\"green\" basic onClick={this.onApprove}>Approve</Button>\r\n          )}\r\n        </Cell>\r\n        <Cell>\r\n        {request.complete ? null : (\r\n          <Button color=\"teal\" basic onClick={this.onFinalize}>Finalize</Button>\r\n            )}\r\n        </Cell>\r\n          </Row>\r\n        );\r\n  }\r\n}\r\nexport default RequestRow;\r\n"]},"metadata":{},"sourceType":"module"}