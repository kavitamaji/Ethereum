{"ast":null,"code":"import Web3 from 'web3'; //const web3 = new Web3(window.web3.currentProvider); //because it isnt accessible to next js// verify by checking on browser then on cmd\n\nwindow.addEventListener('load', async () => {\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    window.web3 = new Web3(ethereum);\n\n    try {\n      // Request account access if needed\n      await ethereum.enable(); // Acccounts now exposed\n\n      web3.eth.sendTransaction({\n        /* ... */\n      });\n    } catch (error) {// User denied account access...\n    }\n  } // Legacy dapp browsers...\n  else if (window.web3) {\n      window.web3 = new Web3(web3.currentProvider); // Acccounts always exposed\n\n      web3.eth.sendTransaction({\n        /* ... */\n      });\n    } // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n      }\n});\nlet web3;\n\nif (false && typeof window.web3 !== 'undefined') {\n  //we are in the browser and metamask is running\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  //we are on server OR the user is not running metamask\n  const provider = new Web3.providers.HttpProvider('ripple dragon mobile bulb follow pill guilt wine memory grace spirit puppy', 'https://rinkeby.infura.io/v3/fed7fb9fca9b481aaf7c352a63cff737');\n  web3 = new Web3(provider);\n}\n\nexport default web3;","map":{"version":3,"sources":["D:/EthereumWorkspace/Trustfund/ethereum/web3.js"],"names":["Web3","window","addEventListener","ethereum","web3","enable","eth","sendTransaction","error","currentProvider","console","log","provider","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB,C,CACA;;AACAC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAY;AACxC;AACA,MAAID,MAAM,CAACE,QAAX,EAAqB;AACjBF,IAAAA,MAAM,CAACG,IAAP,GAAc,IAAIJ,IAAJ,CAASG,QAAT,CAAd;;AACA,QAAI;AACA;AACA,YAAMA,QAAQ,CAACE,MAAT,EAAN,CAFA,CAGA;;AACAD,MAAAA,IAAI,CAACE,GAAL,CAASC,eAAT,CAAyB;AAAC;AAAD,OAAzB;AACH,KALD,CAKE,OAAOC,KAAP,EAAc,CACZ;AACH;AACJ,GAVD,CAWA;AAXA,OAYK,IAAIP,MAAM,CAACG,IAAX,EAAiB;AAClBH,MAAAA,MAAM,CAACG,IAAP,GAAc,IAAIJ,IAAJ,CAASI,IAAI,CAACK,eAAd,CAAd,CADkB,CAElB;;AACAL,MAAAA,IAAI,CAACE,GAAL,CAASC,eAAT,CAAyB;AAAC;AAAD,OAAzB;AACH,KAJI,CAKL;AALK,SAMA;AACDG,QAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;AACJ,CAvBD;AAwBA,IAAIP,IAAJ;;AACA,IAAI,SAAiC,OAAOH,MAAM,CAACG,IAAd,KAAuB,WAA5D,EAAwE;AACxE;AACEA,EAAAA,IAAI,GAAG,IAAIJ,IAAJ,CAASC,MAAM,CAACG,IAAP,CAAYK,eAArB,CAAP;AACD,CAHD,MAII;AACF;AACA,QAAMG,QAAQ,GAAG,IAAIZ,IAAI,CAACa,SAAL,CAAeC,YAAnB,CAAgC,4EAAhC,EACjB,+DADiB,CAAjB;AAEAV,EAAAA,IAAI,GAAG,IAAIJ,IAAJ,CAASY,QAAT,CAAP;AACD;;AACD,eAAeR,IAAf","sourcesContent":["import Web3 from 'web3';\r\n//const web3 = new Web3(window.web3.currentProvider); //because it isnt accessible to next js// verify by checking on browser then on cmd\r\nwindow.addEventListener('load', async () => {\r\n    // Modern dapp browsers...\r\n    if (window.ethereum) {\r\n        window.web3 = new Web3(ethereum);\r\n        try {\r\n            // Request account access if needed\r\n            await ethereum.enable();\r\n            // Acccounts now exposed\r\n            web3.eth.sendTransaction({/* ... */});\r\n        } catch (error) {\r\n            // User denied account access...\r\n        }\r\n    }\r\n    // Legacy dapp browsers...\r\n    else if (window.web3) {\r\n        window.web3 = new Web3(web3.currentProvider);\r\n        // Acccounts always exposed\r\n        web3.eth.sendTransaction({/* ... */});\r\n    }\r\n    // Non-dapp browsers...\r\n    else {\r\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n    }\r\n});\r\nlet web3;\r\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined'){\r\n//we are in the browser and metamask is running\r\n  web3 = new Web3(window.web3.currentProvider);\r\n}\r\nelse{\r\n  //we are on server OR the user is not running metamask\r\n  const provider = new Web3.providers.HttpProvider('ripple dragon mobile bulb follow pill guilt wine memory grace spirit puppy',\r\n  'https://rinkeby.infura.io/v3/fed7fb9fca9b481aaf7c352a63cff737');\r\n  web3 = new Web3(provider);\r\n}\r\nexport default web3;\r\n"]},"metadata":{},"sourceType":"module"}