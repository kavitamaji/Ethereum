{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Trustfund from '../../ethereum/trustfund';\n\nvar TrustfundShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TrustfundShow, _Component);\n\n  function TrustfundShow() {\n    _classCallCheck(this, TrustfundShow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrustfundShow).apply(this, arguments));\n  }\n\n  _createClass(TrustfundShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          balance = _this$props.balance,\n          manager = _this$props.manager,\n          minimumcontribution = _this$props.minimumcontribution,\n          requestsCount = _this$props.requestsCount,\n          approversCount = _this$props.approversCount;\n      var items = [{\n        header: manager,\n        meta: 'Address of Guardian',\n        description: 'The guardian created this Trust Fund and can create request to withdraw money'\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Trust Fund show\"), this.renderCards());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var trustfund, summary;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              trustfund = Trustfund(props.query.address);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(trustfund.methods.getSummary().call());\n\n            case 3:\n              summary = _context.sent;\n              console.log(summary);\n              return _context.abrupt(\"return\", {\n                minimumcontribution: summary[0],\n                balance: summary[1],\n                requestsCount: summary[2],\n                approversCount: summary[3],\n                manager: summary[4]\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return TrustfundShow;\n}(Component);\n\nexport default TrustfundShow;","map":{"version":3,"sources":["D:/EthereumWorkspace/Trustfund/pages/trustfunds/show.js"],"names":["React","Component","Card","Layout","Trustfund","TrustfundShow","props","balance","manager","minimumcontribution","requestsCount","approversCount","items","header","meta","description","renderCards","trustfund","query","address","methods","getSummary","call","summary","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;IAEMC,a;;;;;;;;;;;;;kCAcS;AAAA,wBAOP,KAAKC,KAPE;AAAA,UAETC,OAFS,eAETA,OAFS;AAAA,UAGTC,OAHS,eAGTA,OAHS;AAAA,UAITC,mBAJS,eAITA,mBAJS;AAAA,UAKTC,aALS,eAKTA,aALS;AAAA,UAMTC,cANS,eAMTA,cANS;AASX,UAAMC,KAAK,GAAG,CACZ;AACEC,QAAAA,MAAM,EAAEL,OADV;AAEEM,QAAAA,IAAI,EAAE,qBAFR;AAGEC,QAAAA,WAAW,EAAE;AAHf,OADY,CAAd;AAQA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAIH;AAArB,QAAP;AACD;;;6BAEM;AACH,aACE,MAAC,MAAD,QACI,oCADJ,EAEK,KAAKI,WAAL,EAFL,CADF;AAMD;;;oCAxC4BV,K;;;;;;AACrBW,cAAAA,S,GAAYb,SAAS,CAACE,KAAK,CAACY,KAAN,CAAYC,OAAb,C;;+CACLF,SAAS,CAACG,OAAV,CAAkBC,UAAlB,GAA+BC,IAA/B,E;;;AAAhBC,cAAAA,O;AACNC,cAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;+CACM;AACJd,gBAAAA,mBAAmB,EAAEc,OAAO,CAAC,CAAD,CADxB;AAEJhB,gBAAAA,OAAO,EAAEgB,OAAO,CAAC,CAAD,CAFZ;AAGJb,gBAAAA,aAAa,EAAEa,OAAO,CAAC,CAAD,CAHlB;AAIJZ,gBAAAA,cAAc,EAAEY,OAAO,CAAC,CAAD,CAJnB;AAKJf,gBAAAA,OAAO,EAAEe,OAAO,CAAC,CAAD;AALZ,e;;;;;;;;;;;;EALgBtB,S;;AA2C5B,eAAeI,aAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport Trustfund from '../../ethereum/trustfund';\r\n\r\nclass TrustfundShow extends Component{\r\n    static async getInitialProps(props){\r\n      const trustfund = Trustfund(props.query.address);\r\n      const summary = await trustfund.methods.getSummary().call();\r\n      console.log(summary);\r\n      return{\r\n        minimumcontribution: summary[0],\r\n        balance: summary[1],\r\n        requestsCount: summary[2],\r\n        approversCount: summary[3],\r\n        manager: summary[4]\r\n      };\r\n    }\r\n\r\n  renderCards(){\r\n    const {\r\n      balance,\r\n      manager,\r\n      minimumcontribution,\r\n      requestsCount,\r\n      approversCount\r\n    } = this.props;\r\n\r\n    const items = [\r\n      {\r\n        header: manager,\r\n        meta: 'Address of Guardian',\r\n        description: 'The guardian created this Trust Fund and can create request to withdraw money'\r\n      }\r\n    ];\r\n\r\n    return <Card.Group items = {items}/>;\r\n  }\r\n\r\nrender() {\r\n      return (\r\n        <Layout>\r\n            <h3>Trust Fund show</h3>\r\n            {this.renderCards()}\r\n        </Layout>\r\n      );\r\n    }\r\n}\r\nexport default TrustfundShow;\r\n"]},"metadata":{},"sourceType":"module"}