{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Card, Grid } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Trustfund from '../../ethereum/trustfund';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\n\nclass TrustfundShow extends Component {\n  static async getInitialProps(props) {\n    const trustfund = Trustfund(props.query.address);\n    const summary = await trustfund.methods.getSummary().call();\n    console.log(summary);\n    return {\n      address: props.query.address,\n      minimumcontribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minimumcontribution,\n      requestsCount,\n      approversCount\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: 'Address of Guardian',\n      description: 'The guardian created this trust fund and can create request to withdraw money',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: minimumcontribution,\n      meta: 'Minimum Contribution (wei)',\n      description: 'You must send at least this much wei to become an approver on the child account'\n    }, {\n      header: requestsCount,\n      meta: 'Number of spends requests made by guardian',\n      description: 'A request tries to withdraw money from the fund. Request must be approved by an approver.'\n    }, {\n      header: approversCount,\n      meta: 'Benefactors',\n      description: 'Benefactors'\n    }, {\n      header: web3.utils.fromWei(balance, 'ether'),\n      meta: 'Fund balance (ether)',\n      description: 'The balance is how much money the trust fund has left to spend'\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Trust Fund show\"), __jsx(Grid, null, __jsx(Grid.Column, {\n      width: 10\n    }, this.renderCards()), __jsx(Grid.Column, {\n      width: 6\n    }, \"  \", __jsx(ContributeForm, null))));\n  }\n\n}\n\nexport default TrustfundShow;","map":{"version":3,"sources":["D:/EthereumWorkspace/Trustfund/pages/trustfunds/show.js"],"names":["React","Component","Card","Grid","Layout","Trustfund","web3","ContributeForm","TrustfundShow","getInitialProps","props","trustfund","query","address","summary","methods","getSummary","call","console","log","minimumcontribution","balance","requestsCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","utils","fromWei","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAgBC,IAAhB,QAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,aAAN,SAA4BP,SAA5B,CAAqC;AACjC,eAAaQ,eAAb,CAA6BC,KAA7B,EAAmC;AACjC,UAAMC,SAAS,GAAGN,SAAS,CAACK,KAAK,CAACE,KAAN,CAAYC,OAAb,CAA3B;AACA,UAAMC,OAAO,GAAG,MAAMH,SAAS,CAACI,OAAV,CAAkBC,UAAlB,GAA+BC,IAA/B,EAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,WAAM;AACJD,MAAAA,OAAO,EAAEH,KAAK,CAACE,KAAN,CAAYC,OADjB;AAEJO,MAAAA,mBAAmB,EAAEN,OAAO,CAAC,CAAD,CAFxB;AAGJO,MAAAA,OAAO,EAAEP,OAAO,CAAC,CAAD,CAHZ;AAIJQ,MAAAA,aAAa,EAAER,OAAO,CAAC,CAAD,CAJlB;AAKJS,MAAAA,cAAc,EAAET,OAAO,CAAC,CAAD,CALnB;AAMJU,MAAAA,OAAO,EAAEV,OAAO,CAAC,CAAD;AANZ,KAAN;AAQD;;AAEHW,EAAAA,WAAW,GAAE;AACX,UAAM;AACJJ,MAAAA,OADI;AAEJG,MAAAA,OAFI;AAGJJ,MAAAA,mBAHI;AAIJE,MAAAA,aAJI;AAKJC,MAAAA;AALI,QAMF,KAAKb,KANT;AAQA,UAAMgB,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEH,OADV;AAEEI,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,WAAW,EAAE,+EAHf;AAIEC,MAAAA,KAAK,EAAC;AAACC,QAAAA,YAAY,EAAE;AAAf;AAJR,KADY,EAOZ;AACEJ,MAAAA,MAAM,EAAEP,mBADV;AAEEQ,MAAAA,IAAI,EAAE,4BAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAPY,EAYZ;AACEF,MAAAA,MAAM,EAAEL,aADV;AAEEM,MAAAA,IAAI,EAAC,4CAFP;AAGEC,MAAAA,WAAW,EAAC;AAHd,KAZY,EAiBZ;AACEF,MAAAA,MAAM,EAAEJ,cADV;AAEEK,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAjBY,EAsBZ;AACEF,MAAAA,MAAM,EAAErB,IAAI,CAAC0B,KAAL,CAAWC,OAAX,CAAmBZ,OAAnB,EAA2B,OAA3B,CADV;AAEEO,MAAAA,IAAI,EAAE,sBAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAtBY,CAAd;AA6BA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAIH;AAArB,MAAP;AACD;;AAEHQ,EAAAA,MAAM,GAAG;AACH,WACE,MAAC,MAAD,QACI,oCADJ,EAEI,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OAAyB,KAAKT,WAAL,EAAzB,CADF,EAEE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,aAAyB,MAAC,cAAD,OAAzB,CAFF,CAFJ,CADF;AASD;;AAnEgC;;AAqErC,eAAejB,aAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { Card , Grid } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport Trustfund from '../../ethereum/trustfund';\r\nimport web3 from '../../ethereum/web3';\r\nimport ContributeForm from '../../components/ContributeForm';\r\n\r\nclass TrustfundShow extends Component{\r\n    static async getInitialProps(props){\r\n      const trustfund = Trustfund(props.query.address);\r\n      const summary = await trustfund.methods.getSummary().call();\r\n      console.log(summary);\r\n      \r\n      return{\r\n        address: props.query.address,\r\n        minimumcontribution: summary[0],\r\n        balance: summary[1],\r\n        requestsCount: summary[2],\r\n        approversCount: summary[3],\r\n        manager: summary[4]\r\n      };\r\n    }\r\n\r\n  renderCards(){\r\n    const {\r\n      balance,\r\n      manager,\r\n      minimumcontribution,\r\n      requestsCount,\r\n      approversCount\r\n    } = this.props;\r\n\r\n    const items = [\r\n      {\r\n        header: manager,\r\n        meta: 'Address of Guardian',\r\n        description: 'The guardian created this trust fund and can create request to withdraw money',\r\n        style:{overflowWrap: 'break-word'}\r\n      },\r\n      {\r\n        header: minimumcontribution,\r\n        meta: 'Minimum Contribution (wei)',\r\n        description: 'You must send at least this much wei to become an approver on the child account'\r\n      },\r\n      {\r\n        header: requestsCount,\r\n        meta:'Number of spends requests made by guardian',\r\n        description:'A request tries to withdraw money from the fund. Request must be approved by an approver.'\r\n      },\r\n      {\r\n        header: approversCount,\r\n        meta: 'Benefactors',\r\n        description: 'Benefactors'\r\n      },\r\n      {\r\n        header: web3.utils.fromWei(balance,'ether'),\r\n        meta: 'Fund balance (ether)',\r\n        description: 'The balance is how much money the trust fund has left to spend'\r\n      }\r\n    ];\r\n\r\n    return <Card.Group items = {items}/>;\r\n  }\r\n\r\nrender() {\r\n      return (\r\n        <Layout>\r\n            <h3>Trust Fund show</h3>\r\n            <Grid>\r\n              <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\r\n              <Grid.Column width={6}>  <ContributeForm/></Grid.Column>\r\n            </Grid>\r\n        </Layout>\r\n      );\r\n    }\r\n}\r\nexport default TrustfundShow;\r\n"]},"metadata":{},"sourceType":"module"}