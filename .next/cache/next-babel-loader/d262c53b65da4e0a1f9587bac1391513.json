{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport { Link } from '../../../routes';\nimport Layout from '../../../components/Layout';\nimport Trustfund from '../../../ethereum/trustfund';\nimport RequestRow from '../../../components/RequestRow';\n\nvar RequestIndex =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RequestIndex, _Component);\n\n  function RequestIndex() {\n    _classCallCheck(this, RequestIndex);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RequestIndex).apply(this, arguments));\n  }\n\n  _createClass(RequestIndex, [{\n    key: \"renderRows\",\n    value: function renderRows() {\n      var _this = this;\n\n      return this.props.requests.map(function (request, index) {\n        return __jsx(RequestRow, {\n          key: index,\n          id: index,\n          request: request,\n          address: _this.props.address,\n          approversCount: _this.props.approversCount\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Header = Table.Header,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Body = Table.Body;\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Request List\"), __jsx(Link, {\n        route: \"/trustfunds/\".concat(this.props.address, \"/requests/new\")\n      }, __jsx(\"a\", null, __jsx(Button, {\n        primary: true,\n        floated: \"right\",\n        style: {\n          marginBottom: 10\n        }\n      }, \"Add Request\"))), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"ID\"), __jsx(HeaderCell, null, \"Description\"), __jsx(HeaderCell, null, \"Amount\"), __jsx(HeaderCell, null, \"Recipient\"), __jsx(HeaderCell, null, \"Approval count\"), __jsx(HeaderCell, null, \"Approve\"), __jsx(HeaderCell, null, \"Finalize\"))), __jsx(Body, null, this.renderRows())), __jsx(\"div\", null, \"found \", this.props.requestsCount));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var address, trustfund, requestCount, approversCount, requests;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              address = props.query.address;\n              trustfund = Trustfund(address);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(trustfund.methods.getRequestsCount().call());\n\n            case 4:\n              requestCount = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(trustfund.methods.approversCount().call());\n\n            case 7:\n              approversCount = _context.sent;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(_Promise.all(Array(_parseInt(requestCount)).fill().map(function (element, index) {\n                return trustfund.methods.requests(index).call();\n              })));\n\n            case 10:\n              requests = _context.sent;\n              return _context.abrupt(\"return\", {\n                address: address,\n                requests: requests,\n                requestCount: requestCount,\n                approversCount: approversCount\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return RequestIndex;\n}(Component);\n\nexport default RequestIndex;","map":{"version":3,"sources":["D:/EthereumWorkspace/Trustfund/pages/trustfunds/requests/index.js"],"names":["React","Component","Button","Table","Link","Layout","Trustfund","RequestRow","RequestIndex","props","requests","map","request","index","address","approversCount","Header","Row","HeaderCell","Body","marginBottom","renderRows","requestsCount","query","trustfund","methods","getRequestsCount","call","requestCount","all","Array","fill","element"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,mBAA5B;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;IAEMC,Y;;;;;;;;;;;;;iCAiBQ;AAAA;;AACV,aAAO,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,UAACC,OAAD,EAASC,KAAT,EAAmB;AAChD,eAAO,MAAC,UAAD;AACL,UAAA,GAAG,EAAEA,KADA;AAEL,UAAA,EAAE,EAAEA,KAFC;AAGL,UAAA,OAAO,EAAED,OAHJ;AAIL,UAAA,OAAO,EAAE,KAAI,CAACH,KAAL,CAAWK,OAJf;AAKL,UAAA,cAAc,EAAG,KAAI,CAACL,KAAL,CAAWM;AALvB,UAAP;AAOD,OARM,CAAP;AASD;;;6BAEO;AAAA,UACCC,MADD,GACkCb,KADlC,CACCa,MADD;AAAA,UACSC,GADT,GACkCd,KADlC,CACSc,GADT;AAAA,UACcC,UADd,GACkCf,KADlC,CACce,UADd;AAAA,UAC0BC,IAD1B,GACkChB,KADlC,CAC0BgB,IAD1B;AAEN,aACE,MAAC,MAAD,QACA,iCADA,EAEA,MAAC,IAAD;AAAM,QAAA,KAAK,wBAAiB,KAAKV,KAAL,CAAWK,OAA5B;AAAX,SACE,iBACE,MAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,OAAO,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAE;AAACM,UAAAA,YAAY,EAAC;AAAd;AAAvC,uBADF,CADF,CAFA,EAOA,MAAC,KAAD,QACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,UAAD,aADF,EAEE,MAAC,UAAD,sBAFF,EAGE,MAAC,UAAD,iBAHF,EAIE,MAAC,UAAD,oBAJF,EAKE,MAAC,UAAD,yBALF,EAME,MAAC,UAAD,kBANF,EAOE,MAAC,UAAD,mBAPF,CADF,CADF,EAWW,MAAC,IAAD,QACR,KAAKC,UAAL,EADQ,CAXX,CAPA,EAsBA,6BAAY,KAAKZ,KAAL,CAAWa,aAAvB,CAtBA,CADF;AA2BD;;;oCAzD4Bb,K;;;;;;AACjBK,cAAAA,O,GAAWL,KAAK,CAACc,K,CAAjBT,O;AACDU,cAAAA,S,GAAYlB,SAAS,CAACQ,OAAD,C;;+CACAU,SAAS,CAACC,OAAV,CAAkBC,gBAAlB,GAAqCC,IAArC,E;;;AAArBC,cAAAA,Y;;+CACuBJ,SAAS,CAACC,OAAV,CAAkBV,cAAlB,GAAmCY,IAAnC,E;;;AAAvBZ,cAAAA,c;;+CAEiB,SAAQc,GAAR,CACtBC,KAAK,CAAC,UAASF,YAAT,CAAD,CAAL,CACEG,IADF,GAEEpB,GAFF,CAEM,UAACqB,OAAD,EAASnB,KAAT,EAAmB;AAAC,uBAAOW,SAAS,CAACC,OAAV,CAAkBf,QAAlB,CAA2BG,KAA3B,EAAkCc,IAAlC,EAAP;AACxB,eAHF,CADsB,C;;;AAAjBjB,cAAAA,Q;+CAQA;AAACI,gBAAAA,OAAO,EAAPA,OAAD;AAAWJ,gBAAAA,QAAQ,EAARA,QAAX;AAAsBkB,gBAAAA,YAAY,EAAZA,YAAtB;AAAoCb,gBAAAA,cAAc,EAAdA;AAApC,e;;;;;;;;;;;;EAfcd,S;;AA4D3B,eAAeO,YAAf","sourcesContent":["import React , {Component} from 'react';\r\nimport {Button, Table} from 'semantic-ui-react';\r\nimport {Link} from '../../../routes';\r\nimport Layout from '../../../components/Layout'\r\nimport Trustfund from '../../../ethereum/trustfund';\r\nimport RequestRow from '../../../components/RequestRow';\r\n\r\nclass RequestIndex extends Component{\r\n  static async getInitialProps(props){\r\n       const {address} = props.query;\r\n       const trustfund = Trustfund(address);\r\n       const requestCount = await trustfund.methods.getRequestsCount().call();\r\n       const approversCount = await trustfund.methods.approversCount().call();\r\n\r\n       const requests = await Promise.all(\r\n        Array(parseInt(requestCount))\r\n         .fill()\r\n         .map((element,index) => {return trustfund.methods.requests(index).call();\r\n         })\r\n       );\r\n\r\n    //   console.log(requests);\r\n      return {address , requests , requestCount, approversCount};\r\n  }\r\n  renderRows(){\r\n    return this.props.requests.map((request,index) => {\r\n      return <RequestRow\r\n        key={index}\r\n        id={index}\r\n        request={request}\r\n        address={this.props.address}\r\n        approversCount ={this.props.approversCount}\r\n       />;\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {Header, Row, HeaderCell, Body} = Table;\r\n    return(\r\n      <Layout>\r\n      <h3>Request List</h3>\r\n      <Link route={`/trustfunds/${this.props.address}/requests/new`}>\r\n        <a>\r\n          <Button primary floated=\"right\" style={{marginBottom:10}}>Add Request</Button>\r\n        </a>\r\n      </Link>\r\n      <Table>\r\n        <Header>\r\n          <Row>\r\n            <HeaderCell>ID</HeaderCell>\r\n            <HeaderCell>Description</HeaderCell>\r\n            <HeaderCell>Amount</HeaderCell>\r\n            <HeaderCell>Recipient</HeaderCell>\r\n            <HeaderCell>Approval count</HeaderCell>\r\n            <HeaderCell>Approve</HeaderCell>\r\n            <HeaderCell>Finalize</HeaderCell>\r\n          </Row>\r\n        </Header><Body>\r\n        {this.renderRows()}\r\n        </Body>\r\n      </Table>\r\n      <div>found {this.props.requestsCount}</div>\r\n      </Layout>\r\n    );\r\n\r\n  }\r\n}\r\nexport default RequestIndex;\r\n"]},"metadata":{},"sourceType":"module"}